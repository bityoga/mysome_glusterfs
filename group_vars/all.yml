--- 
glusterfs_daemon: "glusterd"
glusterfs_cluster_public_ips: "{{ groups['gfscluster'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"
#glusterfs_cluster_private_ips: "{{ groups['gfscluster'] | map('extract', hostvars, ['ansible_eth0', 'ipv4', 'address']) | join(',') }}"
glusterd_version: "9"
# gluster cluster ips
gluster_cluster_hosts: "{{ glusterfs_cluster_public_ips.split(',') }}"
#gluster_cluster_private_hosts: "{{ glusterfs_cluster_private_ips.split(',') }}"
# Get the private ips for each host as a string where each host ip is seperated by a comma
glusterfs_cluster_private_ips: "{{ansible_play_hosts | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | join(',') }}"
# Convert it to a list
gluster_cluster_private_hosts: "{{ glusterfs_cluster_private_ips.split(',') }}"

    

# Name of the volume.
gluster_cluster_volume: gfs0

# Volume group name
vg_name: "firefly"

# Device Path. Can be a physical volume (e.g.: /dev/xvdf) or a loop device (e.g.: /dev/loop13). 
# loop device is used when you are in devmode, which means that you are not using a seperate volume, 
# but the same volume where your OS is located
#device_path: "/dev/xvdf"
device_path: "/dev/loop13"

# Mount point, the gfs will be mounted to this point on each client
mount_point: "/var/persistantfs"

# Set it to True when there isn't any seperate volume on which you want to setup glusterfs
# If you have a seperate volume(e.g.: /dev/xvdf) other than where your OS is located, set this value to False
devmode: True

# SET THESE VALUES WHEN devmode is True
# ###Size in GB for the initial GFS volume###
gfs_size: 18G
# ###########################################
