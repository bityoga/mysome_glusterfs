---
# ansible-playbook -v 003.setup_glusterfs_cluster.yml -u root
- hosts: all
  become: yes
  become_user: root
  gather_facts: True

  # Install glusterfs-server before running the tasks of
  # gluster.cluster role
  pre_tasks:
    - name: Add an Apt signing key, uses whichever key is at the URL
      apt_key:
        url: http://download.gluster.org/pub/gluster/glusterfs/{{ glusterd_version }}/rsa.pub
        state: present
      when: ansible_os_family == 'Debian'
    
    - name: Add an RPM signing key, uses whichever key is at the URL
      rpm_key:
        key: http://download.gluster.org/pub/gluster/glusterfs/{{ glusterd_version }}/rsa.pub
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Add new apt source
      
      apt_repository:
        repo: ppa:gluster/glusterfs-{{ glusterd_version }}
        filename: gluster.list
        state: present
      when: ansible_os_family == 'Debian'
    
    - name: Add yum apt source
      yum_repository:
        name: glusterfs
        description: glusterfs YUM repo
        baseurl: https://download.gluster.org/pub/gluster/glusterfs/{{ glusterd_version }}/LATEST/RHEL/glusterfs-rhel8.repo
      when: ansible_os_family == 'RedHat'

    - name: Update repositories cache and install "glusterfs-server" package
      package:
        name: "{{item}}"
        update_cache: yes
      loop:
        - "glusterfs-server"
        
    - name: Set python path symlink
      file:
        src: "/usr/bin/python3"
        dest: "/usr/bin/python"
        state: link
    # Pause for 5 seconds to build  cache.
    - name: Pause for 5 seconds to build  cache
      pause:
        seconds: 5

    - name: Start glusterd on the nodes if not already started
      service:
          state: started
          name: glusterd
          enabled: yes
      delegate_to: "{{ item }}"
      run_once: true
      with_items: "{{ gluster_cluster_hosts }}"

    - name: create gluster volume
      vars:
        # Get the private ips for each host as a string where each host ip is seperated by a comma
        glusterfs_cluster_private_ips: "{{ansible_play_hosts | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | join(',') }}"
        # Convert it to a list
        gluster_cluster_private_hosts: "{{ glusterfs_cluster_private_ips.split(',') }}"
      gluster.gluster.gluster_volume:
        state: present
        name: "{{ gluster_cluster_volume }}"
        bricks: '/mnt/brick1'
        force: true
        transport: 'tcp'
        cluster: "{{ gluster_cluster_private_hosts if gluster_cluster_private_hosts is defined and gluster_cluster_private_hosts | length > 0 else gluster_cluster_hosts}}"
      run_once: true